name: Docs and example-gallery

on:
  push:
    branches:
      - "main"
  pull_request:
    # To limit Actions,
    # don't automatically run on synchronize, but allow manual triggering
    types: [opened, reopened, ready_for_review]
    paths:
      - "**"
      - "!*.md"
      - "!.bumpversion.toml"
      - "!.gitignore"
      - "!.github/workflows/*.yml"
      - ".github/workflows/docs.yml"
  workflow_dispatch: # manual button click

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.11"]
        # Need to use a GPU to run the example gallery
        os: ["linux-x64-nvidia-gpu-t4"]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache downloaded data
        uses: actions/cache@v4
        with:
          path: ~/.cache/mach
          # Key based on known file hashes from cached_download() calls
          key: mach-data-cache-v1-${{ runner.os }}-c93af0781daeebf771e53a42a629d4f311407410166ef2f1d227e9d2a1b8c641-c349dc1d677c561434fd0e4a74142c4a0a44b7e6ae0a42d446c078a528ef58c1

      - name: Setup CUDA environment
        uses: ./.github/actions/setup-cuda-python-env
        with:
          python-version: ${{ matrix.python-version }}
          cuda-version: "12.4.0"

      - name: Build docs
        run: make docs

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/_build/html'

  # Deployment job - only deploy on main branch pushes, not PRs
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Only deploy on main branch pushes, not PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
